#!/usr/bin/env python
# -*- coding: iso-8859-1 -*-
#
# $Id: allergy_index,v 1.1 2008-07-18 19:45:46 grahn Exp $
# $Name:  $
#
# Copyright (c) 2008 Jörgen Grahn <grahn+src@snipabacken.se>
# All rights reserved.
#
"""build a html photo index
"""
import re
import os.path
import os
import sys

from photobase import Photobase

def reversedate(s):
    """Transform a standard 'yyyy-mm-dd' date string
    to the less formal 'd.m.yyyy' format popular in Sweden.
    """
    date = map(int, s.split('-'))
    date.reverse()
    return '%d.%d.%d' % tuple(date)

class Generator(object):
    def __init__(self, photobase):
        self._pb = photobase
        self._by_date = self._pb.files.values()
        self._by_date.sort(key = lambda x: x.datetime, reverse = True)
        
    def generate(self, f):
        w = f.write
        py = pym = None
        for p in self._by_date:
            y, m, _ = p.datetime.split('-', 2)
            if py != y:
                w('%s\n' % y)
            if pym != (y, m):
                w('  %s\n' % m)
            py = y
            pym = y, m
            w('    %s -- %s\n' % (p.datetime,
                                  p.description))

def generate(pb, f):
    Generator(pb).generate(f)

def cvs_says(dollarname='$Name:  $'):
    import re
    m = re.match(r'\$'r'Name:\s+(.+?)-(\d+(-\d+)*)\D', dollarname)
    if not m: return ('allergy', 'unknown')
    return m.group(1), m.group(2).replace('-', '.')


if __name__ == "__main__":
    import getopt
    import fileinput
    import os

    prog = os.path.basename(sys.argv[0])

    usage = 'usage: %s [-f file] ... [-e] [-k] [-v | -V] file ...' % prog

    try:
        opts, files = getopt.getopt(sys.argv[1:], 'f:ekvV',
                                    ['help',
                                     'version'])
    except getopt.GetoptError, s:
        print >>sys.stderr, s
        print >>sys.stderr, usage
        sys.exit(1)
    clobber = 1
    verbosity = 0
    descriptions = []
    exiftime = None
    for option, value in opts:
        if option == '-f': descriptions.append(value)
        if option == '-e': exiftime = ExifTime()
        if option == '-k': clobber = 0
        if option == '-v': verbosity = 2
        if option == '-V': verbosity = 1
        if option == '--help':
            print usage
            sys.exit(0)
        if option == '--version':
            print prog
            print '%s, version %s' % cvs_says()
            print 'Copyright (c) 2008 Jörgen Grahn.'
            sys.exit(0)

    if descriptions:
        photobase = Photobase(descriptions)
    else:
        photobase = None

    generate(photobase, sys.stdout)
